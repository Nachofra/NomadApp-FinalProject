stages:
  - build
  - release

build:maven:
  stage: build
  image: maven:3.8.6-openjdk-18
  cache:
    paths:
      - grupo2-backend/target/
  script:
    - cd "grupo2-backend/"
    - echo -e "$DOTENV_CONFIG_BACKEND" > src/main/resources/.env
    - mvn clean install
  artifacts:
    paths:
      - grupo2-backend/target/*.war

build:vite:
  stage: build
  image: node:16.5.0
  cache:
    key:
      files:
        - grupo2-frontend/package-lock.json
      prefix: npm
    paths:
      - grupo2-frontend/node_modules/
  script:
    - cd "grupo2-frontend/"
    - npm install
    - npm run build
  artifacts:
    paths:
      - grupo2-frontend/dist

release:maven:
  stage: release
  image: docker/compose:1.25.5
  services:
    - docker:19.03.8-dind
  script:
    - docker login gitlab.ctd.academy:5050
    # - "docker build -f  dockerfiles/Dockerfile.backend -t ${CI_REGISTRY}/${CI_PROJECT_PATH}/backend:latest --pull ."
    # - "docker push ${CI_REGISTRY}/${CI_PROJECT_PATH}/backend:latest"
  after_script:
    - "docker logout ${CI_REGISTRY}"

# release:vite:
#   stage: release
#   image: docker:latest
#   services:
#     - name: docker:dind
#   before_script:
#     - docker login gitlab.ctd.academy:5050 -u gitlab_docker_token -p $GITLAB_DOCKER_TOKEN
#   script:
#     - "docker build -f dockerfiles/Dockerfile.frontend -t ${CI_REGISTRY}/${CI_PROJECT_PATH}/frontend:latest --pull ."
#     - "docker push ${CI_REGISTRY}/${CI_PROJECT_PATH}/frontend:latest"
#   after_script:
#     - "docker logout ${CI_REGISTRY}"